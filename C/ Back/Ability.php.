<?php

/*
__Ability Plugins__
name=Ability
version=0.1.0
author=DeBe
apiversion=12
class=Ability
*/

class Ability implements Plugin{
	private $api;

	public function __construct(ServerAPI $api, $server =false){
		$this->api = $api;
		$this->Ability = array();
		$this->Hide = array();
		$this->Death = array();
		$this->Colltime = array();
		$this->Attacktime = array();
		$this->Bondage = array();
		$this->Start = 0;
	}

	public function init(){
		$Register = array(
			array("aa","OP"),
			array("a","Player")
		);
		$Alias = array(
			array("시작","aa start"),
			array("중지","aa stop"),
			array("셋","aa set")
		);
		$AddHandler = array(
			array("player.join","Join"),
			array("player.quit","Join"),
	 		array("player.action","Touch"),
			array("player.block.touch","Touch"),
			array("player.block.break","Touch"),
 			array("player.interact","Interact"),
 			array("player.death","Death"),
			array("entity.health.change","Health"),
			array("entity.move","Move")
		);
		foreach($Register as $r) $this->api->console->register($r[0], "Ability.".$r[1]." Command", array($this, "Commander"));
		foreach($Alias as $a)	$this->api->console->alias($a[0],$a[1]);
		$this->api->ban->cmdWhitelist("v");
		foreach($AddHandler as $ah) $this->api->addHandler($ah[0], array($this,$ah[1]."_Handler"));
		DataPacketSendEvent::register(array($this, "PacketHandler"), EventPriority::HIGHEST);
	}

	public function Commander($cmd,$params,$issuer){
		$cmd =strtolower($cmd);
		switch($cmd){
			case "aa":
				switch(strtolower($params[0])){
					case "start":
						if($this->Start == 0){
							if(count($this->api->player->getAll()) > 0){
								$this->Wait();
								return "  [A] 게임을 시작했습니다.";
							}else{
								return "  [A] 플레이어가 너무 적습니다.";
							}
						}else{
							return "  [A] 이미 게임중입니다.";
						}
					break;	
					case "stop":
						if($this->Start !== 0){
							$this->GameStop(0);
						}else{
							return "  [A] 아직 게임중이 아닙니다.";
						}
					break;
					case "set":
						$this->Start = 1;
						$this->AbilitySet($issuer,$params[1]);
						return "  [A] 능력코드 ".$params[1]."로 지정했습니다.";
					break;
					default:
						return "/aa <Start|Stop>";
					break;
				}
			break;
			case "a":
			 if($this->Start == 0){
			 		return "  [A] 게임이 시작되지 않았습니다.";
			 }elseif($issuer instanceof Player){
			 		$x = "없음"; $v = "바라보는곳";
					switch($this->Ability[$issuer->username]){
						case 0:
							$Help = array("무능력",$x,$x,$x);
						break;
						case 1:
							$Help = array("텔퍼", $v."으로 텔레포트한다.","끼임","10초");
						break;
						case 2:
							$Help = array("스토커", $v."의 상대에게 워프한다.",$x,"10초");
						break;
						case 3:
							$Help = array("그랩", $v."의 상대를 데려온다.",$x,"10초");
						break;
						case 4:
							$Help = array("체인져", $v."의 상대와 자리를 바꾼다.",$x,"10초");
						break;
						case 5:
							$Help = array("번지점프", $v."의 상대를 높게 띄운다.",$x,"10초");
						break;
						case 6:
							$Help = array("커플번지", $v."의 상대와 같이 높게 띄워진다.",$x,"10초");
						break;
						case 7:
							$Help = array("봄버", $v."에 폭발데미지을 준다.","폭발","20초");
						break;
	 	 				case 8:
							$Help = array("크리퍼", " 매우 크게 자폭한다.",$x,$x);
						break;
						case 9:
							$Help = array("아마테라스", $v."의 땅이 불로 변한다.","화염","15초");
						break;
						case 10:
							$Help = array("마그마", $v."의 땅이 용암으로 변한다.","화염,용암","30초");
						break;
						case 11:
							$Help = array("아쿠아", $v."의 땅이 물로 변한다.","익사","15초");
						break;
						case 12:
							$Help = array("엘프", $v."의 땅이 나무로 변한다.",$x,"10초");
						break;
						case 13:
							$Help = array("캠핑족", $v."에 텐트를 소환한다.",$x,"10초");
						break;
						case 14:
							$Help = array("디그", "터치한 블럭을 바로 부순다.",$x,$x);
						break;
						case 15:
							$Help = array("권총", $v."의 상대를 보통 데미지로 맞춘다.",$x,"5초");
						break;
						case 16:
							$Help = array("기관총", $v."의 상대를 약한 데미지로 맞춘다.",$x,$x);
						break;
						case 17:
							$Help = array("스나이퍼", $v."의 상대를 강한 데미지로 맞춘다.",$x,"20초");
						break;
						case 18:
							$Help = array("힐러", $v."의 상대 혹은 때린 플레이어를 회복시켜준다.",$x,"10초");
						break;
						case 19:
							$Help = array("재생", "자신을 회복시킨다.",$x,"3초");
						break;
						case 20:
							$Help = array("헌혈", $v."의 상대 혹은 때린 플레이어에게 피를 나눠준다.",$x,"5초");
						break;
						case 21:
							$Help = array("흡혈", $v."의 상대 혹은 때린 플레이어의 피를 흡수한다.",$x,"5초");
						break;
						case 22:
							$Help = array("방화범", $v."의 상대 혹은 때린 플레이어에게 불을 붙힌다.",$x,"5초");
						break;
						case 23:
							$Help = array("투명인간", "10초 동안 은신한다.",$x,"30초");
						break;
						case 24:
							$Help = array("암살자", $v."의 상대에게 워프하고 3초 동안 은신한다.",$x,"60초");
						break;
 						case 25:
							$Help = array("대장장이", "철괴 1개로 다이아를 얻는다.",$x,$x);
						break;
						case 26:
							$Help = array("돌장수", "돌 10개로 랜덤으로 광물을 얻는다.",$x,$x);
						break;
						case 27:
							$Help = array("살신성인", "체력을 깎고 랜덤으로 고기를 얻는다.",$x,$x);
						break;
						case 28:
							$Help = array("다이스", "30%로 ".$v."의 상대 혹은 때린 플레이어가 죽고 70%로 자신이 죽는다.",$x,$x);
						break;
						case 29:
							$Help = array("킬러", $v."의 상대 혹은 때린 플레이어가 즉사",$x,"444초");
						break;
						case 30:
							$Help = array("복서", "공격에 딜레이가 없어진다.",$x,$x);
						break;
 					}
					$M = array(
					"°°°°°°°°°°°°°°°°",
	 				"  이름 : ".$Help[0],
					"  능력 : ".$Help[1],
					"  면역 : ".$Help[2],
					"  쿨탐 : ".$Help[3],
					"°°°°°°°°°°°°°°°°",
					);
					foreach ($M as $m) $issuer->sendChat($m);
				break;
			}else{
				return "[A] 게임내에서만 사용해주세요.";
			}
		}
	}

	public function Join_Handler($data,$event){
	 if($this->Start !== 0){
			switch($event){
				case "player.join":
				 if(isset($this->Death[$data->username])) break;
				 if(!isset($this->Ability[$data->username])) $this->AbilitySet($data,0);
				break;
				case "player.quit":
					$C = (-1);
				 	foreach($this->api->player->getAll() as $P){
						if(!isset($this->Death[$P->username])){
 					 		$C += 1;
 						}
 					}
					if($C == 1) $this->GameStop(1);
 				break;
 			}
		}
	}

	public function Touch_Handler($data,$event){
	 if($this->Start !== 0){
			$P = $data["player"];
			$I = $data["item"];
			if($event == "player.action" and $I == 265 or $event !== "player.action" and $I->getID() == 265){
				if($event !== "player.action"){
	 				$T = $data["target"];
	 				$X = $T->x;
					$Y = $T->y;
					$Z = $T->z;
				}
				if(isset($this->Death[$P->username])){
					return false;
				}else{
					$CT = time(true) - $this->Colltime[$P->username]; 						
	 				$c = 0;
					if($CT >= 0){
						$ov = "  [A] 대상이 없거나 너무 멉니다.";
						switch($this->Ability[$P->username]){
							case 1: //텔퍼, 10초;
							 	$V = $this->View($P,0);
								if($V !== false){
									$c = 10;
									$P->teleport(new Vector3($V->x,$V->y+1,$V->z));	
									$P->sendChat("  [A] 텔레포트 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 2: // 스토커, 10초
						 		$V = $this->View($P,1);
								if($V !== false){
									$c = 10;
									$e = $V->entity;
									$P->teleport(new Vector3($e->x,$e->y,$e->z));	
									$P->sendChat("  [A] 스토킹 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 3: // 그랩, 10초
							 	$V = $this->View($P,1);
								if($V !== false){
									$c = 10;
									$Pe = $P->entity;
									$V->teleport(new Vector3($Pe->x,$Pe->y,$Pe->z));	
									$P->sendChat("  [A] 그랩 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 4: // 체인져, 10초
							 	$V = $this->View($P,1);
								if($V !== false){
									$c = 10;
									$e = $V->entity;
									$Pe = $P->entity;
									$P->teleport(new Vector3($e->x,$e->y,$e->z));	
									$V->teleport(new Vector3($Pe->x,$Pe->y,$Pe->z));	
									$P->sendChat("  [A] 체인지 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 5: // 번지점프, 10초
							 	$V = $this->View($P,1);
								if($V !== false){
									$c = 10;
									$e = $V->entity;
									$V->teleport(new Vector3($Pe->x,100,$Pe->z));	
									$P->sendChat("  [A] 번지점프 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 6: // 커플번지, 10초
						 		$V = $this->View($P,1);
								if($V !== false){
									$c = 10;
									$e = $V->entity;
									$Pe = $P->entity;
									$P->teleport(new Vector3($e->x,100,$e->z));	
									$V->teleport(new Vector3($Pe->x,100,$Pe->z));	
									$P->sendChat("  [A] 커플번지점프 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 7: //봄버, 20초
						 		$V = $this->View($P,0);
								if($V !== false){
									$c = 20;
									$pk = new ExplodePacket;
									$pk->x = $V->x;
									$pk->y = $V->y;
									$pk->z = $V->z;
									$pk->radius = 1;
									$pk->records = array();
									$this->api->player->broadcastPacket($P->level->players,$pk);
	 								$Pvec = new Vector3($V->x,$V->y,$V->z);
									foreach($P->level->players as $Pl){
										$Pe = $Pl->entity;
										$Plvec = new Vector3($Pe->x,$Pe->y,$Pe->z);
										if($Pvec->distance($Plvec) <= 7){
												$Pe->harm(10,"explosion");
										}
									}
									$P->sendChat("  [A] 폭발 !");
								}else{
									$P->sendChat($ov);
								}
							break;
	 	 					case 8: //크리퍼
	 	 						$V = $this->View($P,0);
								if($V !== false){
									$pk = new ExplodePacket;
									$pk->x = $V->x;
									$pk->y = $V->y;
									$pk->z = $V->z;
									$pk->radius = 1;
									$pk->records = array();
									$this->api->player->broadcastPacket($P->level->players,$pk);
									$Pvec = new Vector3($V->x,$V->y,$V->z);
									foreach($P->level->players as $Pl){
									$Pe = $Pl->entity;
									$Plvec = new Vector3($Pe->x,$Pe->y,$Pe->z);
									if($Pvec->distance($Plvec) <= 15){
										$Pe->harm(20,"explosion");
										}
									}
									$P->sendChat("  [A] 폭발 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 9: //아마테라스, 15초
								$V = $this->View($P,0);
								if($V !== false){
									$c = 15;
									$LB = $this->LoadBlock(9);
									if($LB !== false){
										foreach($LB as $D) $P->level->setBlockRaw(new Vector3($V->x+$D[0],$V->y+$D[1],$V->z+$D[2]),BlockAPI::get($D[3],$D[4]),false);
										$P->sendChat("  [A] 아마테라스 !");
									}
								}else{
									$P->sendChat($ov);
								}
							break;
							case 10: //마그마, 30초
								$V = $this->View($P,0);
								if($V !== false){
									$c = 30;
									$LB = $this->LoadBlock(10);
									if($LB !== false){
										foreach($LB as $D){
											$Vec = new Vector3($V->x+$D[0],$V->y+$D[1],$V->z+$D[2]);
											if($P->level->getBlock($Vec)->getID() !== 0){
												$P->level->setBlockRaw($Vec,BlockAPI::get($D[3],$D[4]),false);
											}
										}
									}
									$P->sendChat("  [A] 마그마 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 11: //아쿠아, 15초
								$V = $this->View($P,0);
								if($V !== false){
									$c = 15;
									$LB = $this->LoadBlock(11);
									if($LB !== false){
										foreach($LB as $D){
											$Vec = new Vector3($V->x+$D[0],$V->y+$D[1],$V->z+$D[2]);
											if($P->level->getBlock($Vec)->getID() !== 0){
												$P->level->setBlockRaw($Vec,BlockAPI::get($D[3],$D[4]),false);
											}
										}
									}
									$P->sendChat("  [A] 아쿠아 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 12: //엘프, 10초
								$V = $this->View($P,0);
								if($V !== false){
									$c = 10;
									$LB = $this->LoadBlock(12);
									if($LB !== false){
										foreach($LB as $D) $P->level->setBlockRaw(new Vector3($V->x+$D[0],$V->y+$D[1],$V->z+$D[2]),BlockAPI::get($D[3],$D[4]),false);
										$P->sendChat("  [A] 나무술 !");
									}
								}else{
									$P->sendChat($ov);
								}
							break;
							case 13: //캠핑족, 10초
								$V = $this->View($P,0);
								if($V !== false){
									$c = 10;
									$LB = $this->LoadBlock(13);
									if($LB !== false){
										$Mt = mt_rand(1,14);
										foreach($LB as $D){
											if($D[3] == 35){
												$D4 = $Mt;
											}else{
												$D4 = $D[4];
											}
											$P->level->setBlockRaw(new Vector3($V->x+$D[0],$V->y+$D[1],$V->z+$D[2]),BlockAPI::get($D[3],$D4),false);
										}
										$P->sendChat("  [A] 원터치텐트 !");
									}
								}else{
									$P->sendChat($ov);
								}
							break;
							case 14: //디그
								if($event == "player.block.touch"){
									$I = BlockAPI::fromString(278);
									$T = $data["target"];
									foreach($T->getDrops($I,$P) as $drop) $P->addItem($drop[0],$drop[1],$drop[2]);
		 							$P->level->setBlockRaw(new Vector3($T->x,$T->y,$T->z),BlockAPI::get(0,0),false);
								}
							break;
							case 15: //권총, 5초
							 	$V = $this->View($P,1);
								if($V !== false){
									$c = 5;
									$pk = new ExplodePacket;
									$pk->x = $P->x;
									$pk->y = $P->y;
									$pk->z = $P->z;
									$pk->radius = 1;
									$pk->records = array();
									$this->api->player->broadcastPacket($P->level->players,$pk);
									$e = $V->entity;
									$e->harm(4,"explosion");
									$P->sendChat("  [A] 나이스샷 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 16: //기관총
							 	$V = $this->View($P,1);
								if($V !== false){
									$pk = new ExplodePacket;
									$pk->x = $P->x;
									$pk->y = $P->y;
									$pk->z = $P->z;
									$pk->radius = 1;
									$pk->records = array();
									$this->api->player->broadcastPacket($P->level->players,$pk);
									$e = $V->entity;
									$e->harm(2,"explosion");
									$P->sendChat("  [A] 나이스샷 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 17: //스나이퍼, 20초
						 		$V = $this->View($P,1);
								if($V !== false){
									$c = 20;
									$pk = new ExplodePacket;
									$pk->x = $P->x;
									$pk->y = $P->y;
									$pk->z = $P->z;
									$pk->radius = 1;
									$pk->records = array();
									$this->api->player->broadcastPacket($P->level->players,$pk);
									$e = $V->entity;
									$e->harm(8,"explosion");
									$P->sendChat("  [A] 나이스샷 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 18: //힐러, 5초
								$V = $this->View($P,1);
								if($V !== false){
									$c = 5;
									$e = $V->entity;
									$e->heal(5,"힐러");
									$P->sendChat("  [A] 힐 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 19: //재생, 3초
						 		$c = 3;
								$P->entity->heal(1,"재생");
								$P->sendChat("  [A] 재생 !");
							break;
							case 20: //헌혈, 5초
							 	$V = $this->View($P,1);
								if($V !== false){
									$c = 5;
									$e = $V->entity;
									$Pe = $P->entity;
									$e->heal(5,"헌혈");
									$Pe->harm(5,"헌혈");
 									$P->sendChat("  [A] 헌혈 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 21: //흡혈, 5초
							 	$V = $this->View($P,1);
								if($V !== false){
									$c = 5;
									$e = $V->entity;
									$Pe = $P->entity;
									$e->harm(5,"흡혈");
									$Pe->heal(5,"흡혈");
 									$P->sendChat("  [A] 흡혈 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 22: //방화범, 5초
								$V = $this->View($P,1);
								if($V !== false){
									$c = 5;
									$e = $V->entity;
									$e->fire = 300;
									$P->sendChat("  [A] 방화 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 23: //투명인간, 30초
								$this->AbilityUse($P);
							break;
							case 24: //암살자, 60초
						 		$V = $this->View($P,1);
								if($V !== false){
									$c = 10;
									$e = $V->entity;
									$P->teleport(new Vector3($e->x,$e->y,$e->z));	
									$this->AbilityUse($P);
 									$P->sendChat("  [A] 암살준비 !");
								}else{
									$P->sendChat($ov);
								}
							break;
 							case 25: //대장장이
 								$P->removeItem(265,0,1);
 								$P->addItem(264,0,1);
								$P->sendChat("  [A] 다이아획득 !");
							break;
							case 26: //돌장수
							 	$cnt = 0;
								foreach($P->inventory as $slot => $I){
									if($I->getID() == 4) $cnt += $I->count;
								}
								if($cnt < 10){
				 					$P->sendChat("  [A] 돌이 부족합니다. !".$cnt);
								}else{
	 								$P->removeItem(4,0,10);
	 								$Rand = mt_rand(1,5);
	 								switch($Rand){
	 									case 1:
	 										$cnt = mt_rand(1,5);
	 										$SR = array(264,$cnt,"다이아");
	 									break;
	 									case 2:
	 										$cnt = mt_rand(5,10);
	 										$SR = array(266,$cnt,"금");
	 									break;
	 									case 3:
	 										$cnt = mt_rand(2,8);
	 										$SR = array(265,$cnt,"철");
	 									break;
	 									case 4:
	 										$cnt = mt_rand(5,15);
	 										$SR = array(263,$cnt,"석탄");
	 									break;
	 									case 5:
	 										$cnt = mt_rand(5,20);
	 										$SR = array(4,$cnt,"돌");
	 									break;
		 							}
 									$P->addItem($SR[0],0,$SR[1]);
 									$P->sendChat("  [A] [".$Rand."등급] ".$SR[2]." ".$SR[1]." 개 획득 !");
								}
							break;
							case 27: //살신성인
								$ss = mt_rand(1,3);
							 	$P->entity->harm($ss,"살신성인");
								$P->sendChat("  [A] [살신성인] 체력 $ss 소모");
	 							$Rand = mt_rand(0,3);
	 							$Rc= mt_rand(1,5);
	 							switch($Rand){
	  							case 1:
	  								$P->addItem(364,0,$Rc);
	  								$P->sendChat("  [A] 스테이크 ".$Rc."개 획득 !");
	  							break;
	  							case 2:
	  								$P->addItem(366,0,$Rc);
	  								$P->sendChat("  [A] 치킨 ".$Rc."개 획득 !");
	  							break;
	  							case 3:
	  								$P->addItem(320,0,$Rc);
	  								$P->sendChat("  [A] 삼겹살 ".$Rc."개 획득 !");
	  							break;
	  							default:
	  								$P->sendChat("  [A] 아무것도 못얻었습니다 !");
	  							break;
	  						}
							break;
							case 28: //다이스
							 	$V = $this->View($P,1);
								if($V !== false){
									$c = 5;
									$ss = mt_rand(1,10);
									if($ss > 3){
										$P->sendChat("  [A] 다이스에 실패하셨습니다. 다이스 : ".$ss);
										$P->entity->harm(999,"다이스");
									}else{
										$P->sendChat("  [A] 다이스에 성공하셨습니다. 다이스 : ".$ss);
										$V->entity->harm(999,"다이스");
 										$V->sendChat("  [A] 다이스에 희생되었습니다. !");
 									}
								}else{
									$P->sendChat($ov);
								}
							break;
							case 29: //킬러, 444초
								$V = $this->View($P,1);
								if($V !== false){
									$c = 444;
									$e = $V->entity;
									$e->harm(999,"킬러");
									$P->sendChat("  [A] 킬 !");
								}else{
									$P->sendChat($ov);
								}
							break;
							case 31: //발장애인
								$this->Bondage[$P->username] = time(true) + 5;
							break;
						}
						$this->Colltime[$P->username] = time(true) + $c;
					}else{
						$P->sendChat("  [A] 쿨타임 : ".$CT*-1 ."초");
						return false;
					}
				}
			}
		}
	}

	public function Interact_Handler($data){
		if($this->Start !== 0){
	 		$Te = $data["targetentity"];	
	 		$Pe = $data["entity"];
	 		$T = $Te->player;	
	 		$P = $Pe->player;
/*	 		if(isset($this->Death[$P->username])){
	 		 return false;
	 		 break;
	 		}*/
	 		$CT = time(true) - $this->Colltime[$P->username]; 						
	 		$AT = time(true) - $this->Attacktime[$P->username]; 						
	 		$c = 0;
			if($CT < 0){
				if($AT < 0) return false;
				$P->sendChat("  [A] 쿨타임 : ".$CT*-1 ."초");
	 			$this->Attacktime[$P->username] = time(true) + 1;
			}elseif($AT < 0){
				return false;
			}else{
				switch($this->Ability[$P->username]){
					case 18: //힐러, 5초
						$c = 5;
						$Te->heal(5,"힐러");
						$P->sendChat("  [A] 힐 !");
						return false;
					break;
					case 20: //헌혈, 5초
						$c = 5;
						$Te->heal(5,"헌혈");
						$Pe->harm(5,"헌혈");
						$P->sendChat("  [A] 헌혈 !");
						return false;
					break;
					case 21: //흡혈, 5초
						$c = 5;
						$Te->harm(5,"흡혈");
						$Pe->heal(5,"흡혈");
						$P->sendChat("  [A] 흡혈 !");
						return false;
					break;
					case 22: //방화범, 5초
						$c = 5;
						$Te->fire = 30;
						$P->sendChat("  [A] 방화 !");
						return false;
					break;
					case 28: //다이스
						$ss = mt_rand(1,10);
						if($ss > 3){
							$P->sendChat("  [A] 다이스에 실패하셨습니다. 다이스 : ".$ss);
							$Pe->harm(999,"다이스");
						}else{
							$P->sendChat("  [A] 다이스에 성공하셨습니다. 다이스 : ".$ss);
							$Te->harm(999,"다이스");
 							$T->sendChat("  [A] 다이스에 희생되었습니다. !");
 						}
 						return false;
					break;
					case 29: //킬러, 444초
						$c = 444;
						$Te->harm(999,"킬러");
						$P->sendChat("  [A] 킬 !");
						return false;
					break;
				}
				$this->Colltime[$P->username] = time(true) + $c;
				$this->Attacktime[$P->username] = time(true) + 1;
			}
		}
	}

	public function Death_Handler($data){
		if($this->Start !== 0){
			$P = $data["player"];
			$Pn = $P->username;
			$A = $this->Ability[$Pn];
			$this->Death[$Pn] = true;
			$C = 0; 			
			foreach($this->api->player->getAll() as $P){
				if(!isset($this->Death[$Pn]))	$C += 1;
 			}
 			if($C == 1) $this->GameStop(1);
		}
	}


	public function Health_Handler($data){
		if($this->Start !== 0){
			$e = $data["entity"];
			if($e->player instanceof Player){
				$en = $e->name;
				$A = $this->Ability[$en];
				switch($data["cause"]){
					case "fall":
					break; 
					case "suffocation": //텔퍼
		 				if($A == 1) return false;
					break;
					case "fire":
					case "burning": //아마테라스,마그마
						if($A == 9 or $A == 10){
							$e->fire = 0;
							return false;
						}
					break;
					case "water": //아쿠아
						if($A == 11) return false;
					break;
					case "explosion": //봄버
					if($A == 7) return false;
					break;
					case "lava": //마그마
						if($A == 10) return false;
					break;
					default:
					break;
				}
			}
		}
	}

	public function Move_Handler($data){
		if($this->Start !== 0){
			$e = $data;
			if($e->class == ENTITY_PLAYER){
				$P = $e->player;
				$BD = time(true) - $this->Bondage[$P->username]; 						
				if($BD < 0){
					$P->sendChat("  [A] 구속 : ".$BD*-1 ."초");
	 				return false;
				}
			}
		}
	}

	public function PacketHandler(DataPacketSendEvent $event){
		$PK = $event->getPacket();
		if($PK instanceof MovePlayerPacket){
			if(isset($this->Hide[$PK->eid])){
		 		$event->setCancelled();
			}
		}
	}

	public function View($P,$Type){
		$e = $P->entity;
		$eY = $e->yaw;
		$eP = $e->pitch;
		$Vs = -sin($eY/180 *M_PI);
		$Vc = cos($eY/180*M_PI);
		$Vt = -sin($eP/180*M_PI);
		$Vp = cos($eP/180*M_PI);
		$X = round($e->x); 
		$Y = round($e->y)+1; 
		$Z = round($e->z);
		$L = $e->level;
		console("타입 : ".$Type);
		for($f=0; $f < 35; ++$f){
			$X += $Vs * $Vp;
			$Y += $Vt;
			$Z += $Vc * $Vp;
			$Vec = new Vector3(round($X),round($Y),round($Z));
			$B = $L->getBlock($Vec);
			if($f > 30 or $X < 0 or $X > 256 or $Y < 0 or $X > 128 or $Z < 0 or $X > 256){
				return false;
			}elseif($Type == 0){
				if($B->isSolid !== false){
	 				return $B;
					break;
				}
			}elseif($Type == 1){
				foreach($L->players as $Pl){
					if(!isset($this->Death[$Pl->username]) and $P !== $Pl){
						$Pe = $Pl->entity;
						$Plvec = new Vector3($Pe->x, $Pe->y, $Pe->z);
						if($Vec->distance($Plvec) <= 2){
							return $Pl;
							break 2;
						}
					}
				}
			}
		}
	}

	public function LoadBlock($B){
		switch($B){
			case 9: //아마테라스
				return array(array(-1,-1,0,87,0),array(-1,0,0,51,12),array(0,-1,-1,87,0),array(0,-1,1,87,0),array(0,0,-1,51,3),array(0,0,0,87,0),array(0,0,1,51,8),array(0,1,0,51,2),array(1,-1,0,87,0),array(1,0,0,51,15)); 			break;
			case 10: //마그마
				return array(array(-1,-2,-1,11,0),array(-1,-2,0,11,0),array(-1,-2,1,11,0),array(-1,-1,-1,11,0),array(-1,-1,0,11,0),array(-1,-1,1,11,0),array(-1,0,-1,11,0),array(-1,0,0,11,0),array(-1,0,1,11,0),array(0,-2,-1,11,8),array(0,-2,0,11,0),array(0,-2,1,11,0),array(0,-1,-1,11,0),array(0,-1,0,11,0),array(0,-1,1,11,0),array(0,0,-1,11,0),array(0,0,0,11,0),array(0,0,1,11,0),array(1,-2,-1,11,0),array(1,-2,0,11,0),array(1,-2,1,11,0),array(1,-1,-1,11,0),array(1,-1,0,11,0),array(1,-1,1,11,0),array(1,0,-1,11,0),array(1,0,0,11,0),array(1,0,1,11,0));
 			break;
			case 11: //아쿠아
				return array(array(-1,-2,-1,9,0),array(-1,-2,0,9,0),array(-1,-2,1,9,0),array(-1,-1,-1,9,0),array(-1,-1,0,9,0),array(-1,-1,1,9,0),array(-1,0,-1,9,0),array(-1,0,0,9,0),array(-1,0,1,9,0),array(0,-2,-1,9,8),array(0,-2,0,9,0),array(0,-2,1,9,0),array(0,-1,-1,9,0),array(0,-1,0,9,0),array(0,-1,1,9,0),array(0,0,-1,9,0),array(0,0,0,9,0),array(0,0,1,9,0),array(1,-2,-1,9,0),array(1,-2,0,9,0),array(1,-2,1,9,0),array(1,-1,-1,9,0),array(1,-1,0,9,0),array(1,-1,1,9,0),array(1,0,-1,9,0),array(1,0,0,9,0),array(1,0,1,9,0));
 			break;
			case 12: //엘프
				return array(array(-2,-1,-2,3,0),array(-2,-1,-1,3,0),array(-2,-1,0,3,0),array(-2,-1,1,3,0),array(-2,-1,2,3,0),array(-2,2,-2,18,11),array(-2,2,-1,18,10),array(-2,2,0,18,9),array(-2,2,1,18,10),array(-2,2,2,18,11),array(-2,3,-2,18,11),array(-2,3,-1,18,10),array(-2,3,0,18,9),array(-2,3,1,18,14),array(-2,3,2,18,15),array(-1,-1,-2,3,0),array(-1,-1,-1,3,0),array(-1,-1,0,3,0),array(-1,-1,1,3,0),array(-1,-1,2,3,0),array(-1,2,-2,18,10),array(-1,2,-1,18,9),array(-1,2,0,18,12),array(-1,2,1,18,13),array(-1,2,2,18,10),array(-1,3,-2,18,10),array(-1,3,-1,18,9),array(-1,3,0,18,12),array(-1,3,1,18,13),array(-1,3,2,18,14),array(-1,4,-1,18,11),array(-1,4,0,18,13),array(-1,4,1,18,15),array(0,-1,-2,3,0),array(0,-1,-1,3,0),array(0,-1,0,3,0),array(0,-1,1,3,0),array(0,-1,2,3,0),array(0,0,0,17,0),array(0,1,0,17,3),array(0,2,-2,18,9),array(0,2,-1,18,8),array(0,2,0,17,1),array(0,2,1,18,8),array(0,2,2,18,9),array(0,3,-2,18,9),array(0,3,-1,18,8),array(0,3,0,17,2),array(0,3,1,18,8),array(0,3,2,18,9),array(0,4,-1,18,9),array(0,4,0,18,12),array(0,4,1,18,13),array(0,5,0,18,11),array(1,-1,-2,3,0),array(1,-1,-1,3,0),array(1,-1,0,3,0),array(1,-1,1,3,0),array(1,-1,2,3,0),array(1,2,-2,18,10),array(1,2,-1,18,9),array(1,2,0,18,12),array(1,2,1,18,13),array(1,2,2,18,10),array(1,3,-2,18,14),array(1,3,-1,18,13),array(1,3,0,18,12),array(1,3,1,18,13),array(1,3,2,18,10),array(1,4,-1,18,15),array(1,4,0,18,13),array(1,4,1,18,11),array(2,-1,-2,3,0),array(2,-1,-1,3,0),array(2,-1,0,3,0),array(2,-1,1,3,0),array(2,-1,2,3,0),array(2,2,-2,18,11),array(2,2,-1,18,10),array(2,2,0,18,9),array(2,2,1,18,10),array(2,2,2,18,11),array(2,3,-2,18,15),array(2,3,-1,18,14),array(2,3,0,18,9),array(2,3,1,18,10),array(2,3,2,18,11));
			break;
			case 13: //캠핑족
				return array(array(-3,0,-3,89,0),array(-3,0,-2,35,0),array(-3,0,-1,35,0),array(-3,0,0,35,0),array(-3,0,1,35,0),array(-3,0,2,35,0),array(-3,0,3,89,0),array(-2,0,-3,35,0),array(-2,0,-2,35,0),array(-2,0,-1,35,0),array(-2,0,0,35,0),array(-2,0,1,35,0),array(-2,0,2,35,0),array(-2,0,3,35,0),array(-2,1,-1,35,0),array(-2,1,1,35,0),array(-2,2,-1,35,0),array(-2,2,1,35,0),array(-2,3,0,35,0),array(-1,0,-3,35,0),array(-1,0,-2,35,0),array(-1,0,-1,89,0),array(-1,0,0,35,0),array(-1,0,1,89,0),array(-1,0,2,35,0),array(-1,0,3,35,0),array(-1,1,-2,35,0),array(-1,1,2,35,0),array(-1,2,-2,35,0),array(-1,2,2,35,0),array(-1,3,-1,35,0),array(-1,3,0,35,0),array(-1,3,1,35,0),array(-1,4,0,89,0),array(0,0,-3,35,0),array(0,0,-2,35,0),array(0,0,-1,35,0),array(0,0,0,35,0),array(0,0,1,35,0),array(0,0,2,35,0),array(0,0,3,35,0),array(0,3,-2,35,0),array(0,3,-1,35,0),array(0,3,0,89,0),array(0,3,1,35,0),array(0,3,2,35,0),array(0,4,-1,89,0),array(0,4,0,35,0),array(0,4,1,89,0),array(0,5,0,89,0),array(1,0,-3,35,0),array(1,0,-2,35,0),array(1,0,-1,89,0),array(1,0,0,35,0),array(1,0,1,89,0),array(1,0,2,35,0),array(1,0,3,35,0),array(1,1,-2,35,0),array(1,1,2,35,0),array(1,2,-2,35,0),array(1,2,2,35,0),array(1,3,-1,35,0),array(1,3,0,35,0),array(1,3,1,35,0),array(1,4,0,89,0),array(2,0,-3,35,0),array(2,0,-2,35,0),array(2,0,-1,35,0),array(2,0,0,35,0),array(2,0,1,35,0),array(2,0,2,35,0),array(2,0,3,35,0),array(2,1,-1,35,0),array(2,1,1,35,0),array(2,2,-1,35,0),array(2,2,1,35,0),array(2,3,0,35,0),array(3,0,-3,89,0),array(3,0,-2,35,0),array(3,0,-1,35,0),array(3,0,0,35,0),array(3,0,1,35,0),array(3,0,2,35,0),array(3,0,3,89,0));
			break;
			
		}
	}

	public function AbilityUse($P){
		$A = $this->Ability[$P->username];
		switch($A){
			case 23: // 투명인간
			case 24: // 암살자
				$e = $P->entity;
				$X = round($e->x); 
				$Y = round($e->y); 
				$Z = round($e->z); 
				$L = $e->level;
				if(isset($this->Hide[$e->eid])){
					unset($this->Hide[$e->eid]);
					$pk = new MovePlayerPacket;
					$pk->eid = $e->eid;
					$pk->x = $X;
					$pk->y = $Y;
					$pk->z = $Z;
					$pk->yaw = 0;
					$pk->pitch = 0;
					foreach($L->players as $Pl){
						if($Pl !== $P){
							$Pl->dataPacket($pk);
							$Pl->dataPacket($pk);
							$Pl->dataPacket($pk);
							$Pl->dataPacket($pk);
						}
					}
					$P->sendChat("  [A] 투명해제");
				}else{
					$pk = new MovePlayerPacket;
					$pk->eid = $e->eid;
					$pk->x = -256;
					$pk->y = 128;
					$pk->z = -256;
					$pk->yaw = 0;
					$pk->pitch = 0;
					foreach($L->players as $Pl){
						if($Pl !== $P){
							for($f = 0; $f < 5; ++$f) $Pl->dataPacket($pk);
						}
					}
					if($A == 23) $T = 10;
					if($A == 24) $T = 3;
					$this->Hide[$e->eid] = array();
					$this->api->schedule($T*20,array($this,"AbilityUse"),$P);
					$P->sendChat("  [A] 투명 !");
				}
			break;
		}
	}
 	public function Wait(){
		$M = array(
			" ",
			"°°°°°°°°°°°°°°°°",
			"  [A] 능력자    제작 :: 데베 (huu6677@naver.com)",
			"  [A] 철괴를 들고 휘두르면 능력이 사용됩니다.",
			"  [A] 능력확인은 /A 입니다.",
			" ",
			"  [A] 잠시후 능력자가 시작됩니다.",
			"°°°°°°°°°°°°°°°°",
			" ",
		);
		$T = 0;
		foreach ($M as $m) {
			$T += 10;
			$this->api->schedule($T,array($this,"Broadcast"),$m);
		}
		$M = array(
			"  [A] 시작 5초전",
			"  [A] 시작 4초전",
			"  [A] 시작 3초전",
			"  [A] 시작 2초전",
			"  [A] 시작 1초전",
		);
		foreach ($M as $m) {
			$T += 20;
			$this->api->schedule($T,array($this,"Broadcast"),$m);
		}
	 	$this->api->schedule(200,array($this,"GameStart")); 	
	}

	public function GameStart(){
		$M = array(
			" ",
			"°°°°°°°°°°°°°°°°",
			"  [A] 게임이 시작되었습니다!",
			"°°°°°°°°°°°°°°°°",
			" "
		);
		foreach ($M as $m) $this->Broadcast($m);
 		$this->Start = 1;
 		foreach($this->api->player->getAll() as $P){
 		 if(!isset($this->Ability[$P->username])) $this->AbilitySet($P,0);
 		 if(!isset($this->Attacktime[$P->username])) $this->Attacktime[$P->username] = 0;
 		 if(!isset($this->Bondage[$P->username])) $this->Bondage[$P->username] = 0;		 
		}
	}

	public function GameStop($Why){
		switch($Why){
			case 0:
				$this->Broadcast("  [A] 관리자가 게임을 종료하였습니다.");
			break;
			case 1:
				$Pn = false;
			 	foreach($this->api->player->getAll() as $P){
					if(!isset($this->Death[$P->username])){
 				 		$Pn = $P->username;
 					}
 				}
				$M = array(
					" ",
					"°°°°°°°°°°°°°°°°",
					"  [A] 최후의 승자가 결정되었습니다!",
					"  [A] 최후의 승자는 ".$Pn."님입니다!",
					"°°°°°°°°°°°°°°°°",
					" "
				);
				foreach ($M as $m) $this->Broadcast($m);
			break;
			default:
				$this->Broadcast("  [A] 오류발생");
			break;
		}
		$this->Broadcast("  [A] 게임이 종료되었습니다.");
		$this->Ability = array();
		$this->Hide = array();
		$this->Death = array();
		$this->Colltime = array();
		$this->Attacktime = array();
		$this->Bondage = array();
		$this->Start = 0;
	}

	public function AbilitySet($P,$R){
		if($R == 0) $R = mt_rand(1,31);
		$this->Ability[$P->username] = $R;
 		$this->Colltime[$P->username] = 0;
		$this->Attacktime[$P->username] = 0;
		$this->Bondage[$P->username] = 0;
 	}

	public function Broadcast($m){
		$this->api->chat->broadcast($m);
	}

	public function __destruct(){
	}
}